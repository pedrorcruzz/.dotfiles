yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa

# default layout (can be bsp, stack or float)
yabai -m config layout bsp

# New window spawns to the right if vertical split, or bottom if horizontal split
yabai -m config window_placement second_child

# padding
yabai -m config top_padding 5
yabai -m config bottom_padding 5
yabai -m config left_padding 5
yabai -m config right_padding 5
yabai -m config window_gap 6

# center mouse on window with focus
yabai -m config mouse_follows_focus on

# modifier for clicking and dragging with mouse
yabai -m config mouse_modifier alt
# set modifier + left-click drag to move window
yabai -m config mouse_action1 move
# set modifier + right-click drag to resize window
yabai -m config mouse_action2 resize

# when window is dropped in center of another window, swap them (on edges it will split it)
yabai -m mouse_drop_action swap

# Disable specific apps
yabai -m rule --add app="^System Settings$" manage=off
yabai -m rule --add app="^System Preferences" manage=off
yabai -m rule --add app="^Calculator$" manage=off
yabai -m rule --add app="^Finder$" manage=off
yabai -m rule --add app="^ChatGPT$" manage=off
yabai -m rule --add app="^Bitwarden$" manage=off
yabai -m rule --add app="^CleanShot X$" manage=off
yabai -m rule --add app="^Simulator" manage=off
yabai -m rule --add app="^Homerow" manage=off
yabai -m rule --add app="^Raycast$" title="^Settings$" manage=off

# Active borders to show which window is active
borders active_color=0xff707070 width=5.0 &

#padrao
# borders active_color=0xffe1e3e4 inactive_color=0xff494d64 width=5.0 &


# Focus on remaining window when other is closed
yabai -m signal --add event=window_destroyed action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"
yabai -m signal --add event=application_terminated action="yabai -m query --windows --window &> /dev/null || yabai -m window --focus mouse"


# Startup spaces
function setup_space {
  local idx="$1"
  local name="$2"
  local space=
  echo "setup space $idx : $name"

  space=$(yabai -m query --spaces --space "$idx")
  if [ -z "$space" ]; then
    yabai -m space --create
  fi

  yabai -m space "$idx" --label "$name"
}

setup_space 1 web
setup_space 2 code
setup_space 3 devtools
setup_space 4 tools
setup_space 5 note
setup_space 6 media
setup_space 7 social

yabai -m rule --add app="^Safari$" space=^1
yabai -m rule --add app="^Dia$" space=^1

yabai -m rule --add app="^Warp$" space=^2
yabai -m rule --add app="^Ghostty$" space=^2
yabai -m rule --add app="^Cursor$" space=^2

yabai -m rule --add app="^Insomnia$" space=^3
yabai -m rule --add app="^Postman$" space=^3
yabai -m rule --add app="^Bruno$" space=^3
yabai -m rule --add app="^OrbStack$" space=^3

yabai -m rule --add app=".*Figma$" space=^4
yabai -m rule --add app="^Linear$" space=^4
yabai -m rule --add app=".*ChatGPT$" space=^4

yabai -m rule --add app="^Obsidian$" space=^5

yabai -m rule --add app="^Spotify$" space=^6

yabai -m rule --add app=".*WhatsApp$" space=^7
yabai -m rule --add app=".*Discord$" space=^7
