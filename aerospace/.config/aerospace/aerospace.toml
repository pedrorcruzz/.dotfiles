# You can use it to add commands that run after AeroSpace startup.
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

exec-on-workspace-change = []

on-focus-changed = ['move-mouse window-lazy-center']

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 16

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak|colemak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
  preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
  inner.horizontal = 4
  inner.vertical = 4
  outer.left = 4
  outer.bottom = 2
  outer.top = 4
  outer.right = 4

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

  # All possible keys:
  # - Letters.        a, b, c, ..., z
  # - Numbers.        0, 1, 2, ..., 9
  # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
  # - F-keys.         f1, f2, ..., f20
  # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
  #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
  #                   backspace, tab, pageUp, pageDown, home, end, forwardDelete,
  #                   sectionSign (ISO keyboards only, european keyboards only)
  # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
  #                   keypadMinus, keypadMultiply, keypadPlus
  # - Arrows.         left, down, up, right

  # All possible modifiers: cmd, alt, ctrl, shift

  # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

  # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
  # You can uncomment the following lines to open up terminal with alt + enter shortcut
  # (like in i3)
  # alt-enter = '''exec-and-forget osascript -e '
  # tell application "Terminal"
  #     do script
  #     activate
  # end tell'
  # '''

  # See: https://nikitabobko.github.io/AeroSpace/commands#layout
  alt-slash = 'layout tiles horizontal vertical'
  alt-semicolon = 'layout accordion horizontal vertical'

  # See: https://nikitabobko.github.io/AeroSpace/commands#focus
  alt-h = 'focus left'
  alt-j = 'focus down'
  alt-k = 'focus up'
  alt-l = 'focus right'

  # See: https://nikitabobko.github.io/AeroSpace/commands#move
  alt-shift-h = 'move left'
  alt-shift-j = 'move down'
  alt-shift-k = 'move up'
  alt-shift-l = 'move right'

  # See: https://nikitabobko.github.io/AeroSpace/commands#resize
  alt-comma = 'resize smart -50'
  alt-period = 'resize smart +50'

  # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
  alt-1 = 'workspace 1'
  alt-2 = 'workspace 2'
  alt-3 = 'workspace 3'
  alt-4 = 'workspace 4'
  alt-a = 'workspace A' # (A)ctions - TickTick
  alt-i = 'workspace I' # (I)A - Gpt
  alt-c = 'workspace C' # (C)hat - Whatsapp, Discord
  alt-m = 'workspace M' # (M)usic - Spotify
  alt-n = 'workspace N' # (N)otes - Obsidian
  alt-t = 'workspace T' # (T)erminal - Ghostty
  alt-d = 'workspace D' # (D)ev - Insomnia, Postman, Orbstack
  alt-w = 'workspace W' # (W)eb - Browser

  # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
  alt-shift-1 = 'move-node-to-workspace 1'
  alt-shift-2 = 'move-node-to-workspace 2'
  alt-shift-3 = 'move-node-to-workspace 3'
  alt-shift-4 = 'move-node-to-workspace 4'
  alt-shift-a = 'move-node-to-workspace A'
  alt-shift-i = 'move-node-to-workspace I'
  alt-shift-c = 'move-node-to-workspace C'
  alt-shift-m = 'move-node-to-workspace M'
  alt-shift-n = 'move-node-to-workspace N'
  alt-shift-t = 'move-node-to-workspace T'
  alt-shift-d = 'move-node-to-workspace D'
  alt-shift-w = 'move-node-to-workspace W'

  ctrl-alt-shift-cmd-semicolon = 'mode service'

  # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
  alt-tab = 'workspace-back-and-forth'
  # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor

  alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'


[workspace-to-monitor-force-assignment]
C = 'secondary'  
3 = 'secondary'  
4 = 'secondary'  

  # See: https://nikitabobko.github.io/AeroSpace/commands#mode

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
  esc = ['reload-config', 'mode main']
  r = ['flatten-workspace-tree', 'mode main'] # reset layout
  f = [
    'layout floating tiling',
    'mode main',
  ] # Toggle between floating and tiling layout
  backspace = ['close-all-windows-but-current', 'mode main']

  # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
  #s = ['layout sticky tiling', 'mode main']

  alt-shift-h = ['join-with left', 'mode main']
  alt-shift-j = ['join-with down', 'mode main']
  alt-shift-k = ['join-with up', 'mode main']
  alt-shift-l = ['join-with right', 'mode main']

  down = 'volume down'
  up = 'volume up'
  shift-down = ['volume set 0', 'mode main']

# to find the app id run: osascript -e 'id of app "App Name"'

[[on-window-detected]]
  if.app-id = 'com.mitchellh.ghostty'
  run = 'move-node-to-workspace T'     # mnemonics T - Terminal

[[on-window-detected]]
  if.app-id = 'com.postmanlabs.mac'
  run = 'move-node-to-workspace D'     # mnemonics D - Dev

[[on-window-detected]]
  if.app-id = 'com.insomnia.app'
  run = 'move-node-to-workspace D'     # mnemonics D - Dev

[[on-window-detected]]
  if.app-id = 'dev.kdrag0n.MacVirt'
  run = 'move-node-to-workspace D'     # mnemonics D - Dev

[[on-window-detected]]
  if.app-id = 'com.openai.chat'
  run = 'move-node-to-workspace I'         # mnemonics I - IA

[[on-window-detected]]
  if.app-id = 'company.thebrowser.dia'
  run = 'move-node-to-workspace W'         # mnemonics W - Web browser

[[on-window-detected]]
  if.app-id = 'com.spotify.client'
  run = 'move-node-to-workspace M' # mnemonics M - Music

[[on-window-detected]]
  if.app-id = 'md.obsidian'
  run = 'move-node-to-workspace N' # mnemonics N - Notes

[[on-window-detected]]
  if.app-id = 'com.TickTick.task.mac'
  run = 'move-node-to-workspace A'    # mnemonics A - Actions


[[on-window-detected]]
  if.app-id = 'net.whatsapp.WhatsApp'
  run = 'move-node-to-workspace C'    # mnemonics C - Chat

[[on-window-detected]]
  if.app-id = 'com.hnc.Discord'
  run = 'move-node-to-workspace C' # mnemonics C - Chat
